# Read `man 5 sway` for a complete reference.

xwayland enable
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# Set window borders
# Reminder that anything changed here will NOT apply retroactively to already open windows!
default_border pixel 0
titlebar_padding 1
titlebar_border_thickness 0
hide_edge_borders smart

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod1
set $filer nautilus
set $browser firefox

### Output configuration
output * bg /home/scott/.wallpaper.jpg fill

{{ if eq .chezmoi.hostname "sb-desktop"}}
# Displays
set $top DP-3
set $primary DP-1
set $right DP-2

workspace 1 output $primary
workspace 4 output $primary
workspace 8 output $top
workspace 9 output $right

output DP-3 resolution 2560x1440 position 0 0 
output DP-2 resolution 2560x1440 position 4480 0
output DP-1 resolution 1920x1080 position 2560 0

# Set primary output in xrandr (needed so some games using XWayland don't freak out)
exec_always xrandr --output DP-1 --primary --mode 1920x1080 --rate 240
{{ end }}

# Font
font pango: CaskaydiaCoveNerdFont 10

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
{{ if lookPath "ghostty"  }}
{{ $ghostty := output "which" "ghostty" }}
set $term {{ $ghostty }}
{{ else }}
set $term foot
{{ end }}
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel -i --hide-before-typing -l 3


include /etc/sway/config-vars.d/*

set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'Adwaita-dark'
    gsettings set $gnome-schema icon-theme 'Breeze Dark'
    #gsettings set $gnome-schema cursor-theme 'Your cursor Theme'
    #gsettings set $gnome-schema font-name 'Your font name'
}

### Idle configuration
exec swayidle -w \
          timeout 300 'swaylock -f -i $HOME/.wallpaper.jpg -c 000000' \
          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -f -c 000000'

### Input configuration
{{ if .SwapEscape }}
input "type:keyboard" xkb_options "caps:swapescape"
{{ end }}
{{ if hasKey . "touchpad" }}
input "{{ .touchpad }}" {
    dwt enabled
    tap enabled
    natural_scroll disabled
    middle_emulation enabled
}
{{ end }}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    {{ if eq .chezmoi.hostname "sb-desktop" }}
    # on my desktop I'd rather the cursor follow the windows I'm moving around since there are multiple screens.
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    {{ else }}
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    {{ end }}
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith; exec notify-send "Split horizontally"
    bindsym $mod+v splitv; exec notify-send "Split vertically"

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle; [floating] border normal 5; [tiling] border pixel 0 

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

## Dmenu // Network Manager // ðŸªŸ <Ctrl> N ##
bindsym $mod+Ctrl+n exec /home/scott/.local/scripts/networkmanager_dmenu

# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 25px
    bindsym $down resize grow height 25px
    bindsym $up resize shrink height 25px
    bindsym $right resize grow width 25px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 25px
    bindsym Down resize grow height 25px
    bindsym Up resize shrink height 25px
    bindsym Right resize grow width 25px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Custom keybinds
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-
bindsym $mod+c exec clipman pick --tool CUSTOM --tool-args "fuzzel -i -l 15 --dmenu"
# shut down the PC
bindsym $mod+Shift+s exec systemctl poweroff -i
{{ if eq .chezmoi.hostname "sb-desktop" }}
# Toggle between speakers and headphones.
bindsym F12 exec --no-startup-id ~/.local/scripts/audio_toggle.sh
{{ end }}

# Automatically launch background apps:
exec --no-startup-id nm-applet --indicator
exec --no-startup-id blueman-applet
exec --no-startup-id gammastep-indicator

{{ if ne .chezmoi.hostname "prothean" }}
# Start the KDE connect daemon
exec /usr/bin/kdeconnectd
{{ end }}

# Start sway notification daemon
exec swaync

# Toggle control center
bindsym $mod+Shift+n exec swaync-client -t -sw

exec wl-paste -t text --watch clipman store --no-persist
exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman.json"

# Launch specific applications with hotkeys:
bindsym Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | tee "$(xdg-user-dir PICTURES)/screenshots/$(date +'screenshot_%Y%m%d_%H%M%S.png')" | wl-copy && notify-send "Screenshot saved to grim $(xdg-user-dir PICTURES)/$(date +'%s_grim.png')"
bindsym Ctrl+Print exec grim -g "$(slurp)" - | tee "$(xdg-user-dir PICTURES)/screenshots/$(date +'screenshot_%Y%m%d_%H%M%S.png')" | wl-copy && notify-send "Screenshot saved and copied to clipboard"

# Per window settings:

#
# Status Bar:
#
bar {
   swaybar_command waybar
}
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*

for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen
